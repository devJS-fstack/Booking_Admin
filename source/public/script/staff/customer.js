const accessToken = `${window.localStorage.getItem('accessToken')}`;
if (accessToken != `null`) {
    (async () => {
        const { status, employee, role } = await checkToken(accessToken);
        if (status == 'success') {
            const idStore = location.href.split('?idStore=')[1];
            if (role === 3) {
                if (employee.IDStore !== parseInt(idStore)) {
                    location.href = './page-err'
                }
                const setStatusBtns = document.querySelectorAll('.set-status-customer');
                setStatusBtns.forEach(item => item.remove())
            }
            else if (role == 4) {
                var service_link = document.querySelector('.service-link');
                var service_span = document.querySelector('.service-span');
                service_link.classList.remove('d-none');
                service_span.classList.remove('d-none');
                const setStatusBtns = document.querySelectorAll('.set-status-customer');
                const iconStatus = document.querySelectorAll('.icon-set-status');
                const spansSetStatus = document.querySelectorAll('.span_set-status')
                clickSetStatus(setStatusBtns, iconStatus, spansSetStatus)
            }
            var itemCustomer = document.querySelectorAll('.adm-service');
            const numberBooking = document.querySelectorAll('.num-bookings');
            const dateLastBook = document.querySelectorAll('.date-last-book')
            itemCustomer.forEach((item, index) => {
                var count = 0;
                bookings.forEach(book => {
                    if (book.PhoneCustomer == item.getAttribute('data-customer')) {
                        count++;
                    }
                })
                numberBooking[index].textContent = count;
            })

            const sidebar = document.querySelector('.sidebar')
            const booked_employee = document.querySelector('.booked_employee')
            const sidebar_content = document.querySelector('.sidebar__content')

            function formatPayment(payment) {
                var paymentString = payment.toString().split('');
                var result = '';
                var countStr = 0;
                paymentString.forEach((item, index) => {
                    if (paymentString.length == 4) {
                        if (index == 1) {
                            result += `.${item}`
                        }
                        else {
                            result += item;
                        }
                    }
                    else {
                        result += item;
                    }

                })
                return result;

            }

            function clickCustomer(itemCustomer) {
                itemCustomer.forEach((item, index) => {
                    item.onclick = async (e) => {
                        if (!e.target.closest('.adm-actions__drop-down')) {
                            sidebar.classList.add('active');
                            $('<div class="sidebar-overlay"></div>').insertAfter('.sidebar')
                            $('.sidebar-overlay').click(function () {
                                sidebar.classList.remove('active');
                                $('.sidebar-overlay').remove();
                            })
                            $('.name_info').text(`${item.getAttribute('data-name')}`)
                            const { status, arrBook, arrService, payment } = await renderBooked(item.getAttribute('data-customer'), idStore)
                            if (status == 'success') {
                                var htmlBooked = ``;
                                var htmlService = ``;
                                if (arrBook.length > 0) {
                                    arrBook.forEach(item => {
                                        htmlBooked += `<div class="sidebar-customer__most-appointments">
                           <div class="section-title">
                               <div class="adm-avatar size-40 mr-0 ml-0 avatar-employe_book"
                                   style="background-image: url(${item.PathImgStaff}); color: rgb(36, 112, 172);">
                               </div>
                               <div
                                   class="adm-appointment-info-section-employee__text">
                                   <div
                                       class="adm-appointment-info-section-employee__text__title">
                                       Lịch hẹn với (<span style="margin:0">${item.count}</span>)
                                   </div>
                                   <div
                                       class="adm-appointment-info-section-employee__text__name">
                                       <span>${item.SurName} ${item.NameStaff}</span>
                                   </div>
                               </div>
                           </div>
                       </div>`
                                    })
                                    arrService.forEach(item1 => {
                                        htmlService += `
                            <div class="adm-appointment-info-section-service services_customer mt-2">
                            <span>${item1.NameService}(${item1.count})</span>
                    </div>
                   `
                                    })
                                    sidebar_content.innerHTML = `
                        <div>
                        <div class="section booked_employee">
                        ${htmlBooked}
                        </div>

                        <div
                            class="adm-appointment-info-section adm-appointment-info-section-customers">
                            <div class="adm-appointment-info-section__header">
                                <i
                                    class="fa-solid fa-chair adm-icon adm-icon__medium adm-icon__primary"></i>
                                <span
                                    class="adm-appointment-info-section__header__title">Dịch
                                    vụ đã đặt</span>
                            </div>
                            <div class="adm-appointment-info-section__content">
                            <div
                            class="adm-appointment-info-section-customers__item service-list__book">
                            ${htmlService}
                            </div>
                            <div
                            class="adm-appointment-info-section-customers__item service-list__book">
                            <div
                                class="adm-appointment-info-section-service services_customer">
                            </div>

                        </div>
                        </div>
                        <div class="section sidebar-appointment__payments">
                            <div class="section-title">
                                <i
                                    class="fa-regular fa-credit-card adm-icon adm-icon__medium adm-icon__primary"></i>
                                <span class="payment-customer">Tổng tiền đã chi trả</span>
                            </div>
                            <div class="flex-center">
                                <h6 class="payment-book">${formatPayment(payment)}.000đ</h6>
                            </div>
                        </div>
                    </div>
                        `;
                                } else {
                                    sidebar_content.innerHTML = `
                        <div class="content-empty pt-5">
                                                    <svg data-v-b0b65208="" width="150" height="150"
                                                        viewBox="0 0 150 150" fill="none"
                                                        xmlns="http://www.w3.org/2000/svg" svg-inline=""
                                                        role="presentation" focusable="false" tabindex="-1">
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M75 150c41.421 0 75-33.579 75-75S116.421 0 75 0 0 33.579 0 75s33.579 75 75 75z"
                                                            fill="#F4F6FA"></path>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M120.274 97.676a3.231 3.231 0 00-3.245-3.231l-83.744.374a3.231 3.231 0 00-3.216 3.232v14.253a3.233 3.233 0 003.304 3.23l83.742-1.875a3.232 3.232 0 003.159-3.23V97.676z"
                                                            fill="#0064F4" fill-opacity=".3"></path>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M120.276 43.938H30.07c-.512 21.367 2.598 44.346-4.521 54.838a3.227 3.227 0 001.459 4.788c21.4 8.148 60.4 10.403 90.067 10.165a3.23 3.23 0 003.2-3.231l.001-66.56z"
                                                            fill="#fff"></path>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M55.374 62.323a.806.806 0 00-.808-.808H39.234a.808.808 0 00-.808.808v18.31a.807.807 0 00.808.808h15.332a.806.806 0 00.808-.808v-18.31z"
                                                            fill="#00143C"></path>
                                                        <mask data-v-b0b65208="" id="a" maskUnits="userSpaceOnUse"
                                                            x="38" y="61" width="18" height="21">
                                                            <path data-v-b0b65208="" fill-rule="evenodd"
                                                                clip-rule="evenodd"
                                                                d="M55.376 62.323a.806.806 0 00-.808-.808H39.236a.808.808 0 00-.808.808v18.31a.807.807 0 00.808.808h15.332a.805.805 0 00.808-.808v-18.31z"
                                                                fill="#fff"></path>
                                                        </mask>
                                                        <g data-v-b0b65208="" opacity=".4" mask="url(#a)">
                                                            <path data-v-b0b65208=""
                                                                d="M9.658 63.763l5.326-5.326a7.756 7.756 0 0110.968 0l.398.398a7.194 7.194 0 0010.173 0l.28-.279a6.8 6.8 0 019.616 0l.001.001a6.8 6.8 0 009.618 0 6.8 6.8 0 019.617 0l.875.874a7.586 7.586 0 0010.73 0s0 0 0 0a7.588 7.588 0 0110.73 0l5.287 5.285"
                                                                stroke="#00358E" stroke-width=".616"></path>
                                                            <path data-v-b0b65208=""
                                                                d="M65.084 65.486l.876.876a8.394 8.394 0 0011.803.066c.054-.025.06-.04.069-.068a6.78 6.78 0 019.587 0l5.287 5.287 1.142-1.143-5.286-5.286a8.395 8.395 0 00-11.627-.236l-.247.237a6.778 6.778 0 01-9.586 0l-.875-.875a7.608 7.608 0 00-10.76 0c-.027.009-.042.014-.066.065a5.993 5.993 0 01-8.41-.064 7.608 7.608 0 00-10.76-.001l-.139.139-.139.138a6.387 6.387 0 01-9.032.002l-.398-.399a8.564 8.564 0 00-12.11 0L9.087 69.55l1.142 1.143 5.326-5.326a6.948 6.948 0 019.826 0l.398.398a8.002 8.002 0 0011.316 0l.14-.14.14-.14a5.992 5.992 0 018.473 0 7.609 7.609 0 0010.76.002l.237-.236v-.335c-.114.357-.154.483-.184.532a5.978 5.978 0 018.423.038z"
                                                                fill="#00358E"></path>
                                                            <path data-v-b0b65208=""
                                                                d="M56.609 71.846l.236-.237v-.334c-.133.454-.137.469-.287.615l-.06.049c.003-.004.037-.032.111-.094a5.992 5.992 0 018.475 0l.875.875a8.394 8.394 0 0011.872 0 6.78 6.78 0 019.588-.001l3.637 3.637 1.65 1.65 1.142-1.143-1.65-1.65-3.636-3.636a8.395 8.395 0 00-11.872 0 6.779 6.779 0 01-9.588 0l-.876-.874a7.608 7.608 0 00-10.759 0c.136-.113.136-.113.17-.13l-.161.14-.01-.01a5.992 5.992 0 01-8.474 0 4.293 4.293 0 00-.14-.11c.02.01.032.02.061.041-2.893-2.903-7.71-2.903-10.681.069l-.28.279a6.386 6.386 0 01-9.03 0l-.399-.399a8.564 8.564 0 00-12.11 0L9.087 75.91l1.142 1.143 5.326-5.326a6.948 6.948 0 019.826 0l.398.398a8.001 8.001 0 0011.316 0l.28-.28a5.992 5.992 0 018.473 0 7.609 7.609 0 0010.76.002z"
                                                                fill="#00358E"></path>
                                                            <path data-v-b0b65208=""
                                                                d="M9.658 82.84l5.326-5.327a7.756 7.756 0 0110.968 0l.398.399a7.193 7.193 0 0010.173 0l.28-.28a6.8 6.8 0 019.617.002 6.8 6.8 0 009.617 0l.001-.002a6.8 6.8 0 019.617 0l.875.876a7.587 7.587 0 0010.73 0v-.001a7.587 7.587 0 0110.73 0l5.287 5.286"
                                                                stroke="#00358E" stroke-width=".616"></path>
                                                            <path data-v-b0b65208=""
                                                                d="M9.658 89.198l5.326-5.326a7.756 7.756 0 0110.968 0l.398.398a7.194 7.194 0 0010.173 0 184 184 0 00.28-.279 6.8 6.8 0 019.616 0l.001.001a6.8 6.8 0 009.617 0h.001a6.8 6.8 0 019.617 0l.875.875a7.586 7.586 0 0010.73 0v-.002a7.588 7.588 0 0110.73 0l5.287 5.287"
                                                                stroke="#00358E" stroke-width=".616"></path>
                                                        </g>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M76.362 86.287a.808.808 0 00-.808-.807H60.222a.808.808 0 00-.808.807v18.31a.81.81 0 00.808.808h15.332a.808.808 0 00.808-.808v-18.31zM97.348 62.323a.808.808 0 00-.808-.808H81.208a.808.808 0 00-.807.808v18.31a.808.808 0 00.807.808H96.54a.807.807 0 00.808-.808v-18.31z"
                                                            fill="#BDE4FF"></path>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M109.298 73.246l.145.002.145.003.146.004.145.005.147.006.145.008.147.009.146.01.146.01.147.012.147.014.147.014.147.016.147.017.147.018.147.019.148.02.147.022.148.022.148.025.148.025.148.026.148.028.148.028.148.03.148.032.149.032.148.034.149.035.148.037.149.037.149.039.148.04.149.041.149.043.149.043.149.046.148.046.149.047.149.05.149.05.149.052.149.052.149.054.149.055.149.057.149.059.149.059.149.06.149.062.144.062.003.001.737.76-.016 1.066-.003.007-.767.74-1.058-.018-.004-.002-.133-.059-.129-.056-.129-.054-.128-.053-.128-.053-.129-.05-.128-.051-.128-.049-.128-.048-.128-.046-.128-.046-.128-.044-.128-.043-.127-.042-.129-.04-.127-.04-.128-.039-.127-.038-.128-.036-.127-.035-.127-.035-.127-.033-.128-.032-.127-.031-.127-.03-.126-.029-.127-.027-.127-.027-.127-.026-.126-.024-.127-.024-.126-.023-.127-.021-.126-.02-.126-.02-.126-.018-.126-.018-.126-.016-.126-.015-.125-.015-.126-.013-.126-.012-.125-.012-.125-.01-.125-.01-.125-.008-.125-.007-.125-.007-.125-.005-.125-.005-.124-.004-.125-.002-.124-.001-.124-.001h-.124l-.124.001-.124.003-.124.003-.123.004-.124.005-.124.005-.123.007-.123.008-.123.009-.123.01-.122.01-.123.011-.122.013-.123.013-.122.014-.122.015-.122.016-.122.017-.121.017-.122.019-.121.02-.122.02-.12.02-.122.023-.12.022-.121.024-.12.025-.12.025-.12.027-.12.027-.12.028-.119.029-.12.03-.119.03-.119.03-.119.033-.118.033-.119.034-.118.035-.118.035-.118.036-.118.037-.117.038-.118.039-.117.039-.116.04-.117.04-.117.043-.116.042-.116.044-.116.044-.115.044-.115.046-.115.047-.116.047-.114.047-.115.05-.113.049-.114.05-.114.05-.113.052-.113.052-.114.054-.112.053-.112.055-.113.055-.112.056-.111.056-.111.058-.111.058-.111.059-.111.06-.11.06-.11.06-.11.062-.109.062-.109.063-.108.063-.109.064-.108.065-.108.066-.107.066-.107.067-.107.068-.107.068-.106.069-.106.069-.105.07-.106.07-.104.072-.105.072-.104.072-.104.073-.104.074-.103.075-.103.075-.102.075-.102.076-.102.077-.101.078-.101.077-.1.079-.101.079-.1.08-.1.08-.099.08-.098.082-.099.081-.098.083-.097.083-.097.083-.097.084-.097.085-.096.085-.095.086-.095.086-.095.086-.094.087-.094.088-.093.088-.094.089-.092.089-.092.09-.092.09-.091.09-.091.091-.09.092-.09.092-.09.092-.089.093-.088.094-.089.093-.087.094-.087.095-.087.095-.086.096-.086.096-.085.096-.085.097-.084.097-.084.098-.083.098-.083.099-.082.098-.082.1-.082.1-.08.099-.08.1-.08.101-.08.102-.079.1-.078.103-.078.102-.077.102-.077.103-.076.104-.076.103-.075.104-.074.105-.075.104-.073.105-.073.105-.072.106-.072.106-.071.106-.071.106-.07.107-.07.107-.069.107-.068.108-.068.107-.067.109-.067.108-.066.109-.066.108-.065.11-.064.11-.064.109-.063.11-.063.11-.062.11-.061.111-.061.11-.06.112-.06.11-.059.112-.058.112-.058.112-.057.112-.057.112-.056.112-.055.113-.055.113-.054.112-.053.114-.053.113-.052.114-.051.113-.051.114-.05.114-.05.113-.048.114-.048.114-.047.114-.047.114-.046.113-.044.114-.044.115-.044.114-.043.114-.042.115-.041.114-.04.115-.04.115-.04.114-.038.116-.038.114-.037.115-.036.115-.037.116-.034.115-.034.115-.034.115-.033.115-.032.116-.031.115-.03.116-.03.115-.03.116-.029.115-.028.116-.027.116-.026.115-.026.116-.025.116-.025.115-.023.116-.023.116-.023.115-.021.116-.021.116-.02.115-.02.116-.02.116-.017.116-.018.115-.017.116-.016.115-.015.116-.015.116-.014.115-.013.116-.013.115-.013.116-.01.115-.012.115-.01.115-.01.116-.008.115-.008.115-.007.115-.007.115-.006.115-.006.115-.004.115-.005.115-.003.114-.003.115-.002.114-.002.115v.342l.001.114.002.114.003.114.003.113.004.114.004.113.005.114.006.113.006.113.007.113.008.113.008.113.009.112.01.113.01.112.01.112.012.112.012.111.013.112.013.112.014.111.015.111.015.111.016.111.017.111.017.11.018.11.018.111.02.109.019.11.02.11.02.109.023.109.022.109.022.109.024.109.024.108.024.108.025.108.026.107.027.108.027.107.028.107.028.107.029.107.03.106.03.106.03.105.031.106.032.105.033.105.033.105.034.105.034.104.035.104.035.104.036.103.037.103.037.103.038.103.038.102.04.102.039.102.04.101.041.102.041.1.042.101.043.1.043.1.044.1.044.099.045.099.045.099.046.098.047.098.047.098.047.097.049.097.049.097.049.096.05.096.05.096.052.095.052.095.052.095.053.094.053.094.054.093.054.093.055.093.056.093.056.092.056.091.058.091.058.091.058.091.059.09.06.089.06.09.06.088.06.089.063.088.062.088.063.087.063.087.063.086.065.086.065.086.065.085.066.084.067.085.066.084.068.083.068.083.069.083.069.082.07.081.07.081.07.081.072.08.071.08.073.079.072.079.074.078.074.078.074.078.075.077.075.076.076.076.077.075.077.076.077.074.078.074.079.074.078.073.08.072.08.072.08.071.082.072.081.07.082.07.083.069.083.069.083.068.084.068.085.068.085.066.086.067.086.065.086.066.087.064.088.064.088.063.088.063.09.063.09.061.089.062.09.06.092.061.091.059.092.059.093.058.093.058.093.058.094.056.094.056.095.056.096.054.096.055.096.053.097.053.098.052.097.053.099.05.099.051.099.05.1.049.1.049.1.048.102.048.101.046.102.047.103.045.103.045.104.044.103.043.104.043.104.042.104.041.104.04.104.04.105.038.104.038.105.038.105.036.105.036.105.035.105.033.105.034.106.033.105.031.106.031.106.031.106.029.106.029.106.028.106.028.106.026.107.026.106.025.107.024.107.023.106.023.107.022.107.022.107.02.107.02.107.019.107.018.107.018.108.017.107.016.108.015.107.015.108.014.107.013.108.012.108.012.108.011.107.01.108.01.108.009.108.008.108.007.108.007.107.006.109.005.108.004.107.004.109.004.107.002.109.001.108.001h.216l.107-.001.109-.002.108-.003.108-.003.108-.004.107-.004.109-.006.108-.006.107-.007.108-.007.108-.009.108-.009.107-.009.108-.01.108-.011.107-.012.108-.012.107-.013.108-.014.107-.014.108-.015.107-.016.107-.016.107-.018.107-.018.107-.018.107-.019.107-.02.107-.021.106-.021.107-.022.106-.022.107-.023.106-.024.106-.025.106-.025.106-.026.106-.026.105-.028.106-.027.105-.029.106-.029.105-.03.105-.031.105-.031.105-.032.104-.032.105-.033.104-.034.104-.034.105-.036.103-.036.104-.036.104-.037.103-.038.103-.038.103-.039.103-.039.103-.041.103-.041.102-.041.102-.042.102-.043.102-.044.102-.044.101-.044.101-.046.101-.046.101-.046.101-.047.1-.048.1-.049.1-.049.1-.049.099-.051.1-.051.098-.052.099-.052.099-.053.098-.053.098-.054.098-.055.098-.055.097-.056.097-.056.097-.057.097-.058.096-.058.096-.059.095-.06.096-.06.095-.061.095-.061.095-.062.094-.062.094-.063.093-.064.094-.064.093-.065.093-.065.093-.067.092-.066.092-.067.091-.068.092-.069.091-.069.09-.069.091-.07.09-.071.09-.071.089-.072.089-.073.089-.073.088-.073.088-.075.087-.074.088-.075.086-.076.087-.077.086-.077.086-.077.086-.079.084-.078.085-.08.085-.079.083-.081.084-.081.083-.081.083-.082.082-.083.082-.083.082-.084.081-.084.081-.084.08-.086.08-.086.08-.086.079-.087.078-.088.079-.088.077-.088.078-.089.077-.09.077-.09.075-.091.076-.091.076-.092.074-.092.075-.093.073-.093.074-.094.073-.094.072-.095.072-.096.072-.096.071-.096.071-.097.069-.098.07-.098.069-.098.069-.1.068-.099.068-.1.067-.101.067-.101.066-.102.065-.102.066-.102.065-.103.063-.104.064-.104.063-.105.063-.105.062-.105.061-.107.061-.106.061-.107.06-.108.059-.108.059-.109.058-.109.058-.109.057-.11.057-.111.056-.111.055-.111.055-.112.055-.112.054-.113.053-.114.052-.114.052-.114.052-.115.051-.115.05-.116.049-.115.049-.116.048-.116.046-.116.046-.116.045-.116.044-.116.044-.116.042-.117.042-.116.041-.117.04-.116.039-.117.039-.116.037-.117.037-.117.036-.117.035-.117.034-.117.034-.117.032-.117.032-.118.031-.117.03-.117.03-.117.028-.118.028-.117.027-.117.026-.118.026-.117.024-.117.024-.118.023-.117.022-.118.022-.117.02-.118.02-.117.019-.118.019-.117.017-.117.017-.118.016-.117.016-.118.014-.117.014-.117.013-.118.013-.117.011-.117.011-.117.01-.117.009-.117.009-.116.008-.118.007-.116.006-.117.006-.117.005-.116.004-.117.003-.116.003-.117.002-.115.001-.117.001-.116v-.115l-.001-.117-.002-.115-.002-.116-.003-.115-.004-.115-.004-.116-.005-.115-.006-.115-.006-.115-.007-.114-.008-.115-.009-.114-.009-.115-.01-.114-.01-.113-.012-.114-.011-.114-.013-.113-.013-.113-.014-.113-.015-.114-.015-.112-.016-.112-.017-.113-.017-.112-.018-.112-.018-.112-.019-.111-.02-.112-.021-.11-.021-.112-.021-.11-.023-.11-.023-.111-.023-.11-.024-.11-.025-.11-.026-.108-.026-.11-.027-.109-.027-.108-.028-.108-.029-.108-.029-.108-.03-.107-.03-.108-.031-.107-.032-.106-.032-.106-.033-.106-.033-.106-.034-.105-.034-.106-.036-.105-.036-.104-.036-.104-.037-.105-.037-.103-.038-.103-.039-.103-.039-.103-.04-.102-.04-.102-.041-.102-.041-.101-.042-.101-.043-.1-.043-.1-.043-.1-.045-.1-.045-.1-.045-.098-.045-.098-.047-.099-.047-.097-.047-.097-.048-.097-.049-.097-.048-.096-.05-.096-.05-.095-.05-.094-.052-.095-.051-.094-.052-.094-.052-.093-.054-.093-.053-.092-.054-.092-.055-.091-.055-.091-.055-.09-.057-.09-.056-.09-.057-.09-.057-.089-.058-.088-.059-.088-.059-.087-.059-.087-.06-.086-.06-.086-.061-.086-.061-.085-.062-.084-.062-.084-.063-.083-.063-.084-.063-.082-.064-.082-.064-.081-.065-.081-.065-.08-.066-.08-.066-.08-.066-.079-.068-.078-.067-.077-.068-.078-.068-.076-.068-.076-.069-.076-.07-.074-.07-.075-.07-.074-.071-.073-.071-.073-.071-.072-.072-.071-.072-.071-.073-.07-.073-.07-.073-.07-.074-.068-.075-.068-.074-.068-.075-.066-.075-.067-.076-.065-.076-.065-.076-.064-.077-.064-.077-.063-.077-.063-.078-.061-.079-.061-.078-.06-.079-.06-.079-.06-.08-.058-.08-.058-.08-.057-.08-.057-.081-.056-.081-.055-.082-.055-.082-.054-.082-.053-.083-.053-.082-.051-.084-.052-.083-.05-.084-.05-.084-.049-.084-.048-.085-.048-.085-.046-.085-.047-.086-.045-.085-.045-.086-.044-.087-.043-.087-.043-.087-.042-.087-.04-.087-.041-.088-.04-.089-.039-.088-.038-.088-.037-.089-.037-.09-.036-.089-.035-.09-.034-.09-.034-.09-.032-.091-.033-.09-.031-.091-.03-.091-.03-.092-.029-.093-.028-.294-.542.542-.294.098.029.099.029.099.03.098.032.099.032.098.033.098.034.097.034.097.036.097.036.097.037.096.038.096.04.096.039.096.04.095.041.095.043.095.042.094.044.094.044.093.045.094.046.093.047.092.047.093.049.092.049.091.05.092.05.091.051.09.052.091.053.09.053.09.055.089.054.089.056.089.056.088.058.088.058.087.058.088.059.086.06.087.06.086.062.086.062.085.063.085.063.084.064.084.065.084.065.084.067.083.066.082.068.083.068.082.068.081.07.081.07.08.07.081.071.08.072.079.073.079.073.078.074.078.074.078.075.077.076.077.076.077.077.076.077.075.078.076.079.074.079.074.08.074.08.074.081.072.081.073.083.072.082.071.083.071.084.071.084.07.085.07.085.069.086.069.087.068.087.068.087.067.088.067.09.066.088.066.09.065.09.065.09.065.092.063.091.064.092.062.093.063.093.062.094.061.094.061.094.06.095.06.096.059.096.059.096.058.097.058.098.057.097.057.099.056.098.055.1.056.1.054.099.054.1.053.101.053.102.053.101.051.102.052.103.05.103.05.103.05.104.049.104.048.105.048.105.047.105.047.106.046.106.045.107.045.106.045.108.043.107.043.108.043.108.042.11.041.108.041.11.04.11.039.11.04.11.038.11.038.112.037.111.036.112.036.112.035.112.034.113.034.112.034.114.033.114.032.113.031.115.031.114.03.115.029.115.029.115.028.115.028.116.027.117.025.116.026.117.025.117.024.117.024.117.022.118.022.118.022.118.021.118.02.119.019.119.019.119.018.12.017.119.017.12.016.12.015.12.014.12.014.12.013.121.013.12.011.122.011.121.01.122.01.121.008.122.008.122.008.123.006.122.006.122.005.123.005.123.003.123.003.123.002.123.001.123.001.124v.124l-.002.123-.001.124-.003.124-.003.124-.004.124-.005.125-.006.124-.006.125-.007.124-.008.125-.009.125-.009.125-.011.125-.011.125-.012.125-.013.125-.014.126-.014.125-.015.125-.016.126-.017.125-.017.126-.019.125-.019.126-.021.126-.021.125-.021.126-.023.125-.024.127-.024.125-.025.126-.026.126-.027.125-.028.126-.028.126-.03.126-.03.126-.031.125-.032.126-.033.126-.034.125-.035.126-.035.126-.037.125-.037.126-.038.125-.039.126-.04.125-.041.125-.042.125-.043.126-.043.125-.045.125-.045.125-.046.125-.047.124-.049.125-.049.125-.05.124-.05.124-.052.124-.052.123-.052.123-.054.122-.054.122-.054.121-.056.121-.055.12-.057.12-.057.119-.058.119-.058.118-.059.118-.06.118-.06.116-.06.117-.062.116-.062.115-.063.115-.063.114-.063.114-.065.113-.064.114-.066.112-.066.112-.067.111-.067.111-.067.11-.068.11-.069.109-.07.109-.07.108-.07.108-.071.108-.072.106-.072.106-.073.106-.073.105-.073.105-.075.104-.074.103-.076.103-.075.103-.077.102-.076.102-.078.1-.077.101-.079.1-.079.099-.079.098-.08.099-.08.097-.081.097-.081.097-.082.096-.082.095-.083.095-.083.094-.084.094-.084.093-.085.093-.085.092-.085.092-.086.09-.086.091-.087.09-.088.089-.087.089-.089.088-.088.087-.089.087-.09.086-.089.086-.091.086-.091.084-.09.084-.092.084-.092.082-.092.082-.093.082-.094.081-.093.081-.094.079-.094.08-.095.078-.095.079-.096.077-.096.077-.096.076-.097.076-.097.075-.097.074-.098.074-.098.073-.099.073-.098.072-.099.071-.1.071-.1.07-.1.07-.101.069-.101.068-.101.068-.101.067-.102.066-.102.066-.103.065-.103.064-.103.064-.103.064-.104.062-.104.062-.105.061-.105.061-.105.06-.105.059-.105.059-.106.058-.107.058-.106.056-.107.056-.107.056-.107.055-.108.054-.108.053-.108.053-.108.052-.109.052-.108.05-.109.05-.11.05-.11.049-.11.048-.109.047-.111.047-.11.046-.111.046-.112.044-.111.044-.111.044-.112.042-.112.042-.112.042-.112.04-.113.04-.112.039-.113.039-.114.038-.113.037-.114.036-.113.036-.114.035-.114.034-.115.034-.114.033-.115.032-.114.031-.115.031-.115.03-.116.029-.115.029-.116.028-.116.027-.115.027-.116.026-.117.024-.116.024-.116.024-.117.023-.117.022-.117.021-.117.021-.117.019-.117.02-.117.018-.118.018-.117.016-.118.017-.118.015-.118.015-.117.014-.118.012-.119.013-.118.012-.118.01-.118.01-.119.01-.118.008-.119.008-.119.007-.118.006-.119.006-.119.005-.119.003-.119.003-.119.003-.119.001-.119.001h-.119l-.119-.001-.12-.001-.119-.003-.119-.002-.119-.004-.119-.005-.12-.006-.119-.006-.119-.007-.12-.008-.119-.009-.119-.009-.119-.011-.12-.011-.119-.012-.119-.012-.12-.014-.119-.014-.119-.015-.119-.017-.119-.016-.119-.018-.119-.018-.119-.019-.119-.021-.119-.021-.119-.021-.119-.023-.118-.023-.119-.025-.118-.025-.119-.026-.118-.026-.119-.028-.118-.028-.118-.029-.118-.031-.118-.03-.118-.032-.118-.033-.118-.034-.117-.034-.118-.035-.117-.036-.118-.037-.117-.038-.116-.038-.117-.04-.117-.04-.117-.041-.116-.042-.117-.043-.116-.044-.116-.045-.116-.045-.115-.047-.116-.047-.115-.048-.115-.049-.114-.049-.114-.051-.113-.051-.113-.051-.112-.053-.112-.053-.111-.054-.111-.054-.11-.055-.11-.056-.11-.057-.108-.057-.108-.058-.108-.059-.107-.06-.107-.06-.106-.061-.106-.061-.105-.062-.105-.063-.104-.063-.104-.064-.103-.065-.102-.066-.102-.066-.101-.066-.101-.068-.1-.068-.1-.069-.1-.069-.099-.07-.098-.07-.098-.071-.097-.072-.096-.073-.097-.073-.095-.073-.095-.074-.095-.075-.093-.076-.094-.076-.093-.076-.092-.078-.091-.077-.092-.078-.09-.08-.09-.079-.09-.08-.088-.081-.088-.081-.088-.082-.087-.082-.087-.083-.086-.084-.085-.084-.085-.084-.085-.085-.083-.086-.083-.086-.083-.087-.082-.087-.081-.088-.081-.088-.08-.088-.08-.09-.08-.089-.078-.091-.078-.09-.077-.092-.076-.092-.077-.092-.075-.093-.075-.093-.074-.093-.074-.095-.073-.094-.073-.096-.072-.095-.071-.096-.07-.097-.071-.097-.07-.097-.069-.098-.068-.098-.068-.099-.067-.1-.066-.099-.066-.1-.065-.101-.065-.101-.064-.101-.063-.102-.063-.102-.062-.103-.062-.103-.06-.103-.061-.104-.06-.104-.059-.105-.058-.105-.058-.105-.057-.106-.057-.106-.056-.107-.055-.107-.055-.107-.054-.108-.053-.108-.053-.108-.052-.109-.051-.109-.051-.11-.05-.109-.05-.11-.049-.111-.048-.111-.048-.111-.047-.112-.046-.112-.046-.111-.045-.113-.044-.113-.044-.113-.043-.113-.043-.114-.041-.114-.041-.115-.04-.115-.04-.114-.04-.116-.038-.115-.038-.116-.037-.116-.037-.116-.035-.117-.036-.117-.034-.117-.034-.118-.033-.118-.033-.118-.031-.118-.032-.119-.03-.118-.03-.119-.029-.12-.028-.119-.028-.12-.027-.12-.027-.12-.025-.121-.025-.121-.024-.12-.024-.122-.023-.121-.022-.121-.022-.122-.02-.122-.021-.122-.02-.123-.018-.122-.019-.123-.017-.123-.017-.123-.016-.124-.015-.123-.015-.124-.014-.124-.013-.124-.012-.124-.012-.124-.011-.125-.01-.125-.01-.124-.01-.125-.008-.125-.007-.126-.007-.125-.006-.126-.006-.125-.004-.126-.004-.126-.003-.126-.003-.127-.002-.126v-.126l-.001-.127v-.126l.001-.127.002-.127.003-.127.003-.127.004-.127.005-.127.005-.127.007-.128.006-.127.008-.128.008-.128.01-.127.01-.128.01-.128.012-.128.012-.128.013-.128.013-.128.015-.128.015-.128.016-.128.017-.129.017-.128.018-.128.02-.128.019-.129.02-.128.022-.129.021-.128.023-.128.024-.128.024-.129.025-.128.026-.129.026-.128.028-.128.028-.129.029-.128.03-.129.03-.128.03-.128.033-.128.033-.129.033-.127.034-.129.035-.128.036-.128.037-.128.037-.128.038-.127.04-.128.04-.128.04-.128.041-.127.043-.128.042-.127.044-.128.045-.127.045-.127.046-.127.047-.127.048-.127.049-.127.049-.127.05-.126.05-.127.052-.126.053-.126.053-.125.053-.126.055-.125.055-.124.056-.125.056-.125.057-.124.058-.124.059-.124.058-.124.06-.124.06-.123.062-.123.062-.123.063-.123.063-.122.064-.122.064-.122.065-.121.066-.122.066-.121.068-.121.067-.12.069-.121.069-.12.07-.12.07-.12.07-.119.072-.118.072-.12.073-.118.073-.118.074-.118.075-.117.075-.117.076-.117.077-.117.077-.115.077-.117.079-.115.079-.115.08-.115.08-.114.08-.115.081-.113.082-.114.082-.113.083-.113.084-.112.084-.112.085-.111.085-.112.086-.11.086-.11.087-.11.088-.11.088-.11.089-.108.089-.109.09-.108.09-.107.091-.107.092-.107.091-.106.093-.106.093-.105.094-.105.094-.105.094-.104.096-.103.096-.103.096-.103.097-.102.097-.102.098-.1.098-.102.099-.1.1-.1.1-.098.1-.1.1-.097.102-.098.102-.097.102-.097.103-.096.104-.095.103-.095.105-.095.105-.094.105-.093.106-.093.106-.092.107-.092.107-.091.108-.09.108-.09.109-.09.109-.09.11-.087.11-.088.11-.087.112-.087.11-.085.113-.086.112-.084.113-.084.113-.084.114-.082.114-.083.115-.081.115-.08.115-.081.116-.08.117-.079.116-.078.118-.077.117-.077.118-.076.119-.076.118-.075.12-.074.12-.073.12-.073.12-.072.121-.071.122-.07.122-.07.122-.07.122-.069.123-.067.123-.067.124-.066.124-.066.125-.065.125-.064.125-.063.126-.062.126-.062.126-.061.127-.06.127-.06.128-.058.128-.057.128-.057.129-.056.129-.056.129-.054.13-.054.13-.053.131-.052.13-.051.131-.05.132-.05.132-.048.132-.048.132-.047.133-.046.133-.045.134-.044.133-.044.134-.042.135-.042.134-.04.136-.04.135-.039.136-.038.135-.037.137-.036.136-.035.137-.034.137-.034.138-.032.137-.031.139-.031.138-.03.138-.028.139-.027.139-.027.14-.025.14-.025.139-.023.14-.023.141-.022.141-.02.141-.02.141-.018.141-.018.142-.016.142-.016.142-.014.142-.013.143-.013.142-.011.144-.01.143-.01.143-.007.144-.007.144-.006.144-.005.144-.003.145-.003.144-.001h.29z"
                                                            fill="#FA3C52"></path>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M56.771 30.254a3.254 3.254 0 10-6.507 0v8.713a3.254 3.254 0 106.507 0v-8.713zM100.079 30.254a3.254 3.254 0 00-6.508 0v8.713a3.253 3.253 0 106.508 0v-8.713z"
                                                            fill="#7BC9FF"></path>
                                                        <path data-v-b0b65208="" fill-rule="evenodd" clip-rule="evenodd"
                                                            d="M98.703 85.98h2.422v1.492h-2.422V85.98zm4.879 0h2.422v1.492h-2.422V85.98zm6.963 0h-2.422v1.492h2.422V85.98zm-14.278 5.377v-2.422h1.493v2.422h-1.493zm0 3.548v2.422h1.493v-2.422h-1.493zm0 8.393v-2.422h1.493v2.422h-1.493zm2.807 2.585h2.422v-1.493h-2.422v1.493zm8.393 0h-2.422v-1.493h2.422v1.493zm2.17-.087h2.422v-1.492h-2.422v1.492zm3.781-5.152v2.421h-1.493v-2.421h1.493zm0-3.55v-2.421h-1.493v2.421h1.493zm0-8.392v2.422h-1.493v-2.422h1.493z"
                                                            fill="#0064F4"></path>
                                                    </svg>
                                                    <p>Oops! Hình như ${item.getAttribute('data-name')} chưa đặt lịch cắt tóc lần nào
                                                        trước đây</p>
                                                </div>
                        `
                                }
                            }
                        }
                    }
                })
            }

            clickCustomer(itemCustomer)

            function formatDate(date) {
                var result = new Date(`${date}`);
                var day = result.getDate() > 9 ? result.getDate() : `0${result.getDate()}`;
                var month = result.getMonth() + 1 > 9 ? result.getMonth() + 1 : `0${result.getMonth() + 1}`;
                return `${day}-${month}-${result.getFullYear()}`
            }

            window.addEventListener('load', async () => {
                const { status, arrLastBook } = await getLastDateBook(idStore);
                if (status == 'success') {
                    itemCustomer.forEach((item, index) => {
                        arrLastBook.forEach(book => {
                            if (book[0].PhoneCustomer == item.getAttribute('data-customer')) {
                                dateLastBook[index].textContent = formatDate(book[0].max);
                            }
                        })
                    })
                }
            })



            const inputPhoneCus = document.getElementById('input_phone_cus');
            const inputNameCus = document.getElementById('input_name_cus');
            const inputEmailCus = document.getElementById('input_email_cus');

            const inputPhoneCus_edit = document.getElementById('input_phone_cus_edit');
            const inputNameCus_edit = document.getElementById('input_name_cus_edit');
            const inputEmailCus_edit = document.getElementById('input_email_cus_edit');

            const div_category = document.querySelectorAll('.adm-form-item .el-form-item');
            const err_div = document.querySelectorAll('.adm-form-item__error')
            function errInputCategory(index, text) {
                div_category[index].classList.remove('is-success');
                div_category[index].classList.add('is-error');
                err_div[index].textContent = text;
            }

            function successInputCategory(index, text) {
                div_category[index].classList.add('is-success');
                div_category[index].classList.remove('is-error');
                err_div[index].textContent = text;
            }

            async function launch_toast(mess) {
                var x = document.getElementById("toast")
                x.className = "show";
                x.textContent = '';
                await setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
                await setTimeout(function () { x.textContent = mess }, 700);
            }


            const confirmAddCus = document.getElementById('confirm-add_customer');
            const btnAddCustomer = document.getElementById('btn-AddCustomer');
            var customerAllLength_text = document.querySelector('.all-customer_text');
            var lengthCus_Current = customerAllLength_text.textContent.trim();

            btnAddCustomer.addEventListener("click", () => {
                successInputCategory(0, "")
                successInputCategory(1, "")
                successInputCategory(2, "")
                inputPhoneCus.value = "";
                inputEmailCus.value = "";
                inputNameCus.value = "";
            })

            inputPhoneCus.oninput = async () => {
                inputPhoneCus.value = inputPhoneCus.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');
                successInputCategory(0, "")
                if (inputPhoneCus.value.length == 10) {
                    const { status } = await checkDuplicatePhone(inputPhoneCus.value)
                    if (status == 'found') {
                        errInputCategory(0, "Số điện thoại này đã được sử dụng")
                    } else {
                        successInputCategory(0, "")
                    }
                }
            }

            inputEmailCus.oninput = () => {
                successInputCategory(2, "")
            }

            inputNameCus.oninput = () => {
                successInputCategory(1, "")
            }

            var inputNamePre_edit;
            var inputPhonePre_edit;
            var inputEmailPre_edit;
            var indexEdit;

            inputPhoneCus_edit.oninput = async () => {
                successInputCategory(0, "")
                if (inputPhoneCus_edit.value != inputPhonePre_edit) {
                    if (inputPhoneCus_edit.value.length == 10) {
                        const { status } = await checkDuplicatePhone(inputPhoneCus_edit.value)
                        if (status == 'found') {
                            errInputCategory(3, "Số điện thoại này đã được sử dụng")
                        } else {
                            successInputCategory(3, "")
                        }
                    }
                } else {
                    successInputCategory(3, "")
                }
            }

            inputEmailCus_edit.oninput = () => {
                successInputCategory(5, "")
            }

            inputNameCus_edit.oninput = () => {
                successInputCategory(4, "")
            }



            function textAvt(name) {
                var arrName = name.split(' ');
                var first = arrName[0].split('')[0];
                var last = arrName[arrName.length - 1].split('')[0];
                return `${first}${last}`;
            }


            var editCustomer = document.querySelectorAll('.edit-customer');
            var deleteCustomer = document.querySelectorAll('.delete-customer');
            confirmAddCus.addEventListener('click', async (e) => {
                var flag = 0;
                e.preventDefault();
                if (inputPhoneCus.value == "") {
                    errInputCategory(0, "Bạn vui lòng nhập số điện thoại của khách hàng")
                } else {
                    if (validatePhone(inputPhoneCus.value)) {
                        const { status } = await checkDuplicatePhone(inputPhoneCus.value)
                        if (status == 'found') {
                            errInputCategory(0, "Số điện thoại này đã được sử dụng")
                        }
                        else {
                            successInputCategory(0, "")
                            if (flag == 0) flag = 1;
                        }
                    } else {
                        errInputCategory(0, "Bạn vui lòng nhập đúng số điện thoại")
                    }
                }

                if (inputNameCus.value == "") {
                    errInputCategory(1, "Bạn vui lòng nhập tên của khách hàng")
                } else {
                    successInputCategory(1, "")
                    if (flag == 1) flag = 2;
                }

                if (inputEmailCus.value == "") {
                    errInputCategory(2, "Bạn vui lòng nhập email của khách hàng")
                } else {
                    if (validateEmail(inputEmailCus.value)) {
                        if (checkDuplicateEmail(inputEmailCus.value)) {
                            errInputCategory(2, "Email này đã được sử dụng")
                        } else {
                            successInputCategory(2, "")
                            if (flag == 2) flag = 3;
                        }
                        // successInputCategory(2, "")
                        if (flag == 2) flag = 3;
                    } else {
                        errInputCategory(2, "Bạn vui lòng nhập đúng email")
                    }
                }

                //  ==> 
                if (flag == 3) {
                    var customers_new = document.querySelectorAll('.adm-service')
                    $('#add-customer_modal').modal('hide');
                    await launch_toast('Tạo tài khoản thành công');
                    customerAllLength_text.textContent = `${parseInt(++lengthCus_Current)}`
                    var date = new Date();
                    var html = ` <div data-customer=${inputPhoneCus.value.trim()} data-name="${inputNameCus.value}"
                    class="adm-service pointer"
        style="border-color: rgb(192, 235, 117);background-color: #182e5b;">
        <div class="adm-service__data">
            <div class="flex-center el-row is-align-middle"
                style="margin-left: -8px; margin-right: -8px;">
                <div class="service-name-col el-col el-col-24 el-col-sm-10"
                    style="padding-left: 8px; padding-right: 8px;">
                    <div class="service-name overflow-ellipsis flex-center">
                        <div class="adm-avatar size-40 margin-right--10 margin-left--0 avt-text"
                            style="background-color: rgb(102, 217, 232); color: rgb(22, 137, 152);">
                            ${textAvt(inputNameCus.value.trim())}
                        </div>
                        <div class="name-phone">
                            <h5 class="overflow-ellipsis mb-0 customer-name"
                                style="font-size: 15px;color:#fff">
                                ${inputNameCus.value.trim()}
                            </h5>
                            <div title={{this.PhoneCustomer}}
                                class=" customer-phone overflow-ellipsis">
                                ${inputPhoneCus.value.trim()}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="el-col el-col-24 el-col-sm-4"
                    style="padding-left: 42px; padding-right: 8px;">
                    <span class="num-bookings">0</span>
                </div>
                <div class="el-col el-col-24 el-col-sm-4"
                    style="padding-left: 8px; padding-right: 8px;">
                    <span class="date-last-book"></span>
                </div>
                <div class="el-col el-col-24 el-col-sm-4"
                    style="padding-left: 8px; padding-right: 8px;">
                    <span>${formatDate(date)}</span>
                </div>
                <div class="el-col el-col-24 el-col-sm-2"
                    style="padding-left: 8px; padding-right: 8px;">
                    <div class="adm-actions__drop-down">
                        <div class="el-dropdown">
                            <button aria-haspopup="true" aria-expanded="false"
                                data-toggle="dropdown" class="adm-btn"
                                id="dropdownMenuButton">
                                <span class="adm-btn__icon">
                                    <i class="fa-solid fa-ellipsis"></i>
                                </span>
                            </button>
                            <ul class="dropdown-menu"
                                aria-labelledby="dropdownMenuButton">
                                <li data-customer=${inputPhoneCus.value.trim()}
                                    class="edit-customer dropdown-item el-dropdown-menu"
                                    data-target="#edit-customer_modal"
                                    data-toggle="modal">
                                    <div
                                        class="adm-dropdown-item__wrapper is-with-icon">
                                        <div class="adm-dropdown-item__icon">
                                            <i class="fa-solid fa-pencil"></i>
                                        </div>
                                        <div class="adm-dropdown-item__label">
                                            Chỉnh sửa
                                        </div>
                                    </div>
                                </li>
                                <li data-customer=${inputPhoneCus.value.trim()}
                                    data-toggle="modal" data-target="#alertModal"
                                    class="delete-customer dropdown-item el-dropdown-menu">
                                    <div
                                        class="adm-dropdown-item__wrapper is-red is-with-icon">
                                        <div class="adm-dropdown-item__icon">
                                            <i class="fa-solid fa-trash-can"></i>
                                        </div>
                                        <div class="adm-dropdown-item__label">
                                            Xóa
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>`;
                    $(`${html}`).insertAfter(customers_new[customers_new.length - 1]);
                    const { status } = await createCustomer(inputPhoneCus.value, inputNameCus.value, inputEmailCus.value)
                    editCustomer = document.querySelectorAll('.edit-customer');
                    deleteCustomer = document.querySelectorAll('.delete-customer');
                    itemCustomer = document.querySelectorAll('.adm-service');
                    clickEdit(editCustomer);
                    clickDelete(deleteCustomer);
                    clickCustomer(itemCustomer)
                }
            })
            function clickEdit(editCustomer) {
                editCustomer.forEach((item, index) => {
                    item.onclick = async () => {
                        successInputCategory(0, "")
                        successInputCategory(1, "")
                        successInputCategory(2, "")
                        const { status, customer } = await getInfoCustomer(item.getAttribute('data-customer'))
                        inputPhoneCus_edit.value = `${customer.PhoneCustomer}`;
                        inputEmailCus_edit.value = `${customer.EmailCustomer}`;
                        inputNameCus_edit.value = `${customer.NameCustomer}`;
                        inputNamePre_edit = `${customer.NameCustomer}`;
                        inputPhonePre_edit = `${customer.PhoneCustomer}`;;
                        inputEmailPre_edit = `${customer.EmailCustomer}`;
                        indexEdit = index;
                    }
                })
            }
            var indexDelete;
            var phoneDelete;
            function clickDelete(deleteCustomer) {
                deleteCustomer.forEach((item, index) => {
                    item.onclick = async () => {
                        if (role === 3) {
                            launch_toast('Bạn không có quyền làm việc này')
                        } else {
                            $('#alertModal').modal('show');
                            indexDelete = index;
                            phoneDelete = item.getAttribute('data-customer');
                        }
                    }
                })
            }


            clickEdit(editCustomer);
            clickDelete(deleteCustomer);

            const confirm_editCus = document.getElementById('confirm-edit_customer');
            const confirm_deleteCus = document.getElementById('btn-confirm-delete');

            confirm_editCus.addEventListener('click', async (e) => {
                var flag = 0;
                e.preventDefault();
                if (inputPhoneCus_edit.value == "") {
                    errInputCategory(3, "Bạn vui lòng nhập số điện thoại để chỉnh sửa")
                } else {
                    if (inputPhoneCus_edit.value != inputPhonePre_edit) {
                        if (validatePhone(inputPhoneCus_edit.value)) {
                            const { status } = await checkDuplicatePhone(inputPhoneCus_edit.value)
                            if (status == 'found') {
                                errInputCategory(3, "Số điện thoại này đã được sử dụng")
                            }
                            else {
                                successInputCategory(3, "")
                                if (flag == 0) flag = 1;
                            }
                        } else {
                            errInputCategory(3, "Bạn vui lòng nhập đúng số điện thoại")
                        }
                    }
                    else {
                        successInputCategory(3, "")
                        if (flag == 0) flag = 1;
                    }
                }

                if (inputNameCus_edit.value == "") {
                    errInputCategory(4, "Bạn vui lòng nhập tên của khách hàng")
                } else {
                    successInputCategory(4, "")
                    if (flag == 1) flag = 2;
                }

                if (inputEmailCus_edit.value == "") {
                    errInputCategory(5, "Bạn vui lòng nhập email của khách hàng")
                } else {
                    if (inputEmailCus_edit.value != inputEmailPre_edit) {
                        if (validateEmail(inputEmailCus_edit.value)) {
                            const { status } = await checkDuplicateEmail(inputEmailCus_edit.value);
                            if (status == 'found') {
                                errInputCategory(5, "Email này đã được sử dụng")
                            } else {
                                successInputCategory(5, "")
                                if (flag == 2) flag = 3;
                            }
                        } else {
                            errInputCategory(5, "Bạn vui lòng nhập đúng email")
                        }
                    }
                    else {
                        successInputCategory(5, "")
                        if (flag == 2) flag = 3;
                    }
                }

                //  ==> 
                if (flag == 3) {
                    $('#edit-customer_modal').modal('hide');
                    await launch_toast("Chỉnh sửa thành công");
                    var customerName = document.querySelectorAll('.customer-name');
                    var customerPhone = document.querySelectorAll('.customer-phone');
                    var avtText = document.querySelectorAll('.avt-text')
                    customerName[indexEdit].textContent = inputNameCus_edit.value;
                    customerPhone[indexEdit].textContent = inputPhoneCus_edit.value;
                    avtText[indexEdit].textContent = textAvt(inputNameCus_edit.value);
                    const { status } = await editCustomer_phone(inputPhonePre_edit, inputPhoneCus_edit.value, inputEmailCus_edit.value, inputNameCus_edit.value)
                }
            })

            confirm_deleteCus.addEventListener('click', async () => {
                if (role === 4) {
                    customerAllLength_text.textContent = `${parseInt(--lengthCus_Current)}`
                    var customers_new = document.querySelectorAll('.adm-service');
                    customers_new[indexDelete].remove();
                    $('#alertModal').modal('hide');
                    await launch_toast('Xóa thành công');
                    const { status } = await deleteCustomer_phone(phoneDelete);
                }
            })


            const input_search = document.querySelector('#search_customer')


            function removeVietnameseTones(str) {
                str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
                str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
                str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
                str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
                str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
                str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
                str = str.replace(/đ/g, "d");
                str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, "A");
                str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, "E");
                str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, "I");
                str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, "O");
                str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, "U");
                str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, "Y");
                str = str.replace(/Đ/g, "D");
                // Some system encode vietnamese combining accent as individual utf-8 characters
                // Một vài bộ encode coi các dấu mũ, dấu chữ như một kí tự riêng biệt nên thêm hai dòng này
                str = str.replace(/\u0300|\u0301|\u0303|\u0309|\u0323/g, ""); // ̀ ́ ̃ ̉ ̣  huyền, sắc, ngã, hỏi, nặng
                str = str.replace(/\u02C6|\u0306|\u031B/g, ""); // ˆ ̆ ̛  Â, Ê, Ă, Ơ, Ư
                // Remove extra spaces
                // Bỏ các khoảng trắng liền nhau
                str = str.replace(/ + /g, " ");
                str = str.trim();
                // Remove punctuations
                // Bỏ dấu câu, kí tự đặc biệt
                str = str.replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, " ");
                return str;
            }

            function showAllCustomer() {
                itemCustomer = document.querySelectorAll('.adm-service');
                itemCustomer.forEach((item, index) => {
                    item.style.display = 'flex';
                })
            }

            input_search.oninput = () => {
                var customer_name = document.querySelectorAll('.customer-name');
                var customer_phone = document.querySelectorAll('.customer-phone')
                itemCustomer = document.querySelectorAll('.adm-service');
                var searchValue = removeVietnameseTones(input_search.value.trim().toUpperCase());
                var inputArr = input_search.value.split('');
                if (inputArr[0] != '0') {
                    if (input_search.value == "") {
                        showAllCustomer();
                    }
                    customer_name.forEach((item, index) => {
                        var name = removeVietnameseTones(item.textContent.trim().toUpperCase())
                        if (name.search(searchValue) > -1) {
                            itemCustomer[index].style.display = 'flex';
                        }
                        else {
                            itemCustomer[index].style.display = 'none';
                        }
                    })
                }
                else {
                    customer_phone.forEach((item, index) => {
                        var phone = item.textContent.trim();
                        if (phone.search(input_search.value.trim()) > -1) {
                            itemCustomer[index].style.display = 'flex';
                        } else {
                            itemCustomer[index].style.display = 'none';
                        }
                    })
                }

            }

            function clickSetStatus(list, icons, spans) {
                list.forEach((item, index) => {
                    item.onclick = async () => {
                        if (spans[index].textContent.trim() == 'Khóa tài khoản') {
                            icons[index].classList.remove('fa-lock')
                            icons[index].classList.add('fa-unlock')
                            spans[index].textContent = 'Mở khóa tài khoản'
                            await launch_toast('Khóa tài khoản thành công')
                            itemCustomer[index].classList.add('red')
                            await setStatusCustomer(item.getAttribute('data-customer'), 'No Active')
                        } else {
                            icons[index].classList.add('fa-lock')
                            icons[index].classList.remove('fa-unlock')
                            spans[index].textContent = 'Khóa tài khoản'
                            await launch_toast('Mở khóa tài khoản thành công')
                            itemCustomer[index].classList.remove('red')
                            await setStatusCustomer(item.getAttribute('data-customer'), 'Active')
                        }
                    }
                })
            }







            // API

            async function setStatusCustomer(account, status) {
                return (await instance.post('customer/set-status', {
                    account,
                    status
                })).data
            }

            async function renderBooked(phone, idStore) {
                return (await instance.post('customer/render-booked', {
                    phone,
                    idStore,
                })).data
            }

            async function deleteCustomer_phone(phone) {
                return (await instance.post('customer/delete', {
                    phone,
                })).data
            }

            async function editCustomer_phone(phoneOld, phone, email, name) {
                return (await instance.post('customer/edit', {
                    phoneOld,
                    phone,
                    email,
                    name,
                })).data
            }

            async function getInfoCustomer(phone) {
                return (await instance.post('customer/info', {
                    phone,
                })).data
            }

            async function createCustomer(phone, name, email) {
                return (await instance.post('customer/create', {
                    phone,
                    name,
                    email,
                })).data
            }

            async function getLastDateBook(idStore) {
                return (await instance.post('customer/last-book', {
                    idStore
                })).data
            }
        }
        const logoutBtn = document.querySelector('#log-out')
        logoutBtn.onclick = (e) => {
            e.preventDefault();
            window.localStorage.clear();
            window.location = '/'
        }
    })();
} else {
    window.location = '/page-err'
}